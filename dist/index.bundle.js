"use strict";(self.webpackChunkwebpack_template=self.webpackChunkwebpack_template||[]).push([[826],{426:(n,e,r)=>{r.d(e,{Z:()=>h});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),s=r(667),A=r.n(s),c=new URL(r(873),r.b),d=new URL(r(538),r.b),l=new URL(r(913),r.b),p=i()(o()),u=A()(c),m=A()(d),g=A()(l);p.push([n.id,"*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  height: 60%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n  overflow: scroll;\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+u+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n  font-style: italic;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+m+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n\r\n#main-content {\r\n  flex: 1;\r\n}\r\n\r\n#footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #f4f4f4;\r\n  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#footer div {\r\n  text-align: center;\r\n}\r\n\r\n#footer p {\r\n  font-size: 1.4rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n\r\n\r\n.three-dots-icon {\r\n  position: absolute;\r\n  right: 30px;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-image: url("+g+");\r\n  background-size: cover;\r\n  cursor: move;\r\n}\r\n\r\n.erase-icon {\r\n  position: absolute;\r\n  right: 2em;\r\n  font-size: 1.6em;\r\n  cursor: pointer;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;EAGE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,UAAU;EACV,WAAW;EACX,yBAAyB;EACzB,UAAU;EACV,wCAAwC;EACxC,gCAAgC;EAChC,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAiD;EACjD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,iBAAiB;EACjB,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,QAAQ;EACR,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,yDAAkD;EAClD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;;AAGA;;;;EAIE,uBAAuB;EACvB,kCAAkC;EAClC,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,aAAa;EACb,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,YAAY;EACZ,2BAA2B;AAC7B;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,yCAAyC;AAC3C;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;;;AAIA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;EACZ,yDAAoD;EACpD,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,gBAAgB;EAChB,eAAe;AACjB",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  height: 60%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n  overflow: scroll;\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n  font-style: italic;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows2.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n\r\n#main-content {\r\n  flex: 1;\r\n}\r\n\r\n#footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #f4f4f4;\r\n  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#footer div {\r\n  text-align: center;\r\n}\r\n\r\n#footer p {\r\n  font-size: 1.4rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n\r\n\r\n.three-dots-icon {\r\n  position: absolute;\r\n  right: 30px;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-image: url('../assets/icons/elipsis.svg');\r\n  background-size: cover;\r\n  cursor: move;\r\n}\r\n\r\n.erase-icon {\r\n  position: absolute;\r\n  right: 2em;\r\n  font-size: 1.6em;\r\n  cursor: pointer;\r\n}\r\n"],sourceRoot:""}]);const h=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=t.base?A[0]+t.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=r(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=r(a[i]);e[s].references--}for(var A=t(n,o),c=0;c<a.length;c++){var d=r(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},33:(n,e,r)=>{var t=r(379),o=r.n(t),a=r(795),i=r.n(a),s=r(569),A=r.n(s),c=r(565),d=r.n(c),l=r(216),p=r.n(l),u=r(589),m=r.n(u),g=r(426),h={};function E(n){document.querySelector(".todos-ul").querySelectorAll(".task-item").forEach(((n,e)=>{n.dataset.index=e+1,n.taskElement.task.index=e+1,n.querySelector("input[type=checkbox]").name=`task-${e+1}`,n.querySelector(".task-text").setAttribute("for",`task-${e+1}`)})),n.forEach(((n,e)=>{n.index=e+1})),localStorage.setItem("tasks",JSON.stringify(n))}function f(){const n=localStorage.getItem("tasks");return null!==n&&"undefined"!==n?JSON.parse(n):(localStorage.setItem("tasks",JSON.stringify([])),[])}h.styleTagTransform=m(),h.setAttributes=d(),h.insert=A().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=p(),o()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals;const C=class{constructor(n){this.task=n,this.listItem=this.create(),this.eraseIcon=this.listItem.querySelector(".erase-icon"),this.taskText=this.listItem.querySelector(".task-text"),this.threeDotsIcon=this.listItem.querySelector(".three-dots-icon")}create(){const n=document.createElement("li");n.dataset.index=this.task.index,n.classList.add("task-item"),n.taskElement=this;const e=document.createElement("input");e.type="checkbox",e.checked=this.task.completed,n.appendChild(e);const r=document.createElement("span");r.classList.add("task-text"),r.innerText=this.task.description,n.appendChild(r);const t=document.createElement("span");t.className="erase-icon fas fa-trash-alt",t.style.display="none",n.appendChild(t);const o=document.createElement("span");return o.className="three-dots-icon",n.appendChild(o),n.addEventListener("mouseover",(()=>{t.style.display="inline-block",o.style.display="inline-block",n.style.backgroundColor="yellow",r.contentEditable="true"})),n.addEventListener("mouseout",(()=>{t.style.display="none",n.style.backgroundColor="",r.contentEditable="false"})),n}deleteTask(){const n=f(),e=n.findIndex((n=>n.index===this.task.index));-1!==e&&(n.splice(e,1),n.forEach(((n,e)=>{n.index=e+1})),localStorage.setItem("tasks",JSON.stringify(n))),this.listItem.remove(),E(n)}};class B{constructor(n){this.tasks=n}create(){const n=document.createElement("main");return n.id="todo-list__div",n.appendChild(B.createTodoDateDiv()),n.appendChild(B.createTodoDivPlaceholder()),n.appendChild(this.createTodoListDiv()),n.appendChild(B.createBtnDiv()),n}static createTodoDateDiv(){const n=document.createElement("div");n.className="todo-date";const e=document.createElement("p");e.className="todo-date__p",e.textContent="Today's To Do",n.appendChild(e);const r=document.createElement("span");return r.className="loading-icon",n.appendChild(r),n}static createTodoDivPlaceholder(){const n=document.createElement("div");n.className="todo-div__placeholder";const e=document.createElement("input");e.id="new-task",e.type="text",e.placeholder="Add to your list...",n.appendChild(e);const r=document.createElement("span");return r.className="arrow",n.appendChild(r),n}createTodoListDiv(){const n=document.createElement("div");n.className="todo-list";const e=document.createElement("ul");return e.className="todos-ul",this.tasks.sort(((n,e)=>n.index-e.index)).forEach((n=>{const r=new C(n);e.appendChild(r.create())})),n.appendChild(e),n}static createBtnDiv(){const n=document.createElement("div");n.className="btn";const e=document.createElement("button");return e.className="btn-p",e.textContent="Clear all completed",n.appendChild(e),n}}const x=B;function b(n){const e=document.querySelector(".todos-ul");for(;e.firstChild;)e.removeChild(e.firstChild);n.map((n=>new C(n,b))),n.forEach((n=>{const r=new C(n);e.appendChild(r.create())}))}const y=f(),v=(n=>new x(n).create())(y);document.getElementById("todo-list-placeholder").appendChild(v),b(y),window.addEventListener("DOMContentLoaded",(()=>{E(y)}));const k=document.getElementById("new-task");k.addEventListener("keyup",(n=>{if("Enter"===n.key){const n=k.value.trim();""!==n&&(((n,e)=>{const r={description:e,completed:!1,index:n.length+1};n.push(r);const t=document.querySelector(".todos-ul"),o=(new C(r),new C(r).create());t.appendChild(o)})(y,n),localStorage.setItem("tasks",JSON.stringify(y)),k.value="")}})),document.querySelector(".todos-ul").addEventListener("click",(n=>{if(n.target.classList.contains("erase-icon")){n.stopPropagation();const e=n.target.parentElement,{taskElement:r}=e;!function(n){n.deleteTask()}(r);const t=y.findIndex((n=>n.index===r.task.index));t>-1&&(y.splice(t,1),E(y),localStorage.setItem("tasks",JSON.stringify(y))),e.remove()}}))},913:(n,e,r)=>{n.exports=r.p+"f364e958eb482bf2a3f8.svg"},873:(n,e,r)=>{n.exports=r.p+"740d0687e67af6c4e50d.svg"},538:(n,e,r)=>{n.exports=r.p+"54fca204ed115d42f815.svg"}},n=>{n(n.s=33)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,