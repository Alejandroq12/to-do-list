"use strict";(self.webpackChunkwebpack_template=self.webpackChunkwebpack_template||[]).push([[826],{426:(n,e,r)=>{r.d(e,{Z:()=>E});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),s=r(667),A=r.n(s),c=new URL(r(873),r.b),d=new URL(r(538),r.b),l=new URL(r(913),r.b),p=i()(o()),u=A()(c),m=A()(d),g=A()(l);p.push([n.id,"*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+u+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+m+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n.three-dots-icon {\r\n  margin-left: auto;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+g+");\r\n  background-size: cover;\r\n  cursor: move;\r\n}\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n\r\n/* Add this at the end of your existing style.css file */\r\n\r\n#main-content {\r\n  flex: 1;\r\n}\r\n\r\n#footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #f4f4f4;\r\n  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#footer div {\r\n  text-align: center;\r\n}\r\n\r\n#footer p {\r\n  font-size: 1.4rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.erase-icon {\r\n  position: absolute;\r\n  transform: translateX(4800%);\r\n  font-size: 1.2em;\r\n  cursor: pointer;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;EAGE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,UAAU;EACV,yBAAyB;EACzB,UAAU;EACV,wCAAwC;EACxC,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAiD;EACjD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,iBAAiB;EACjB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,QAAQ;EACR,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,yDAAkD;EAClD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,yDAAoD;EACpD,sBAAsB;EACtB,YAAY;AACd;;AAEA;;;;EAIE,uBAAuB;EACvB,kCAAkC;EAClC,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,aAAa;EACb,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,YAAY;EACZ,2BAA2B;AAC7B;;AAEA,wDAAwD;;AAExD;EACE,OAAO;AACT;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,yCAAyC;AAC3C;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,4BAA4B;EAC5B,gBAAgB;EAChB,eAAe;AACjB",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows2.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n.three-dots-icon {\r\n  margin-left: auto;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/elipsis.svg');\r\n  background-size: cover;\r\n  cursor: move;\r\n}\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n\r\n/* Add this at the end of your existing style.css file */\r\n\r\n#main-content {\r\n  flex: 1;\r\n}\r\n\r\n#footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #f4f4f4;\r\n  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#footer div {\r\n  text-align: center;\r\n}\r\n\r\n#footer p {\r\n  font-size: 1.4rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.erase-icon {\r\n  position: absolute;\r\n  transform: translateX(4800%);\r\n  font-size: 1.2em;\r\n  cursor: pointer;\r\n}\r\n"],sourceRoot:""}]);const E=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=t.base?A[0]+t.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=r(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=r(a[i]);e[s].references--}for(var A=t(n,o),c=0;c<a.length;c++){var d=r(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},33:(n,e,r)=>{var t=r(379),o=r.n(t),a=r(795),i=r.n(a),s=r(569),A=r.n(s),c=r(565),d=r.n(c),l=r(216),p=r.n(l),u=r(589),m=r.n(u),g=r(426),E={};function h(n){document.querySelector(".todos-ul").querySelectorAll(".task-item").forEach(((n,e)=>{n.dataset.index=e+1,n.querySelector("input[type=checkbox]").name=`task-${e+1}`,n.querySelector(".task-text").setAttribute("for",`task-${e+1}`)})),localStorage.setItem("tasks",JSON.stringify(n))}E.styleTagTransform=m(),E.setAttributes=d(),E.insert=A().bind(null,"head"),E.domAPI=i(),E.insertStyleElement=p(),o()(g.Z,E),g.Z&&g.Z.locals&&g.Z.locals;const f=class{constructor(n){this.task=n,this.listItem=this.create(),this.eraseIcon=this.listItem.querySelector(".erase-icon"),this.taskText=this.listItem.querySelector(".task-text"),this.threeDotsIcon=this.listItem.querySelector(".three-dots-icon")}create(){const n=document.createElement("li");n.dataset.index=this.task.index,n.classList.add("task-item"),n.taskElement=this;const e=document.createElement("input");e.type="checkbox",e.checked=this.task.completed,n.appendChild(e);const r=document.createElement("span");r.classList.add("task-text"),r.innerText=this.task.description,n.appendChild(r);const t=document.createElement("span");t.className="erase-icon",t.innerHTML="&times;",t.style.display="none",n.appendChild(t);const o=document.createElement("span");return o.className="three-dots-icon",n.appendChild(o),n.addEventListener("mouseover",(()=>{t.style.display="inline-block",o.style.display="inline-block",n.style.backgroundColor="yellow",r.contentEditable="true"})),n.addEventListener("mouseout",(()=>{t.style.display="none",n.style.backgroundColor="",r.contentEditable="false"})),t.addEventListener("click",(()=>{this.deleteTask()})),n}deleteTask(n,e){const r=document.querySelector(`li[data-index='${this.task.index}']`);null!==r&&r.remove(),n.splice(this.task.index-1,1),localStorage.setItem("tasks",JSON.stringify(n)),e&&e()}};class C{constructor(n){this.tasks=n}create(){const n=document.createElement("main");return n.id="todo-list__div",n.appendChild(C.createTodoDateDiv()),n.appendChild(C.createTodoDivPlaceholder()),n.appendChild(this.createTodoListDiv()),n.appendChild(C.createBtnDiv()),n}static createTodoDateDiv(){const n=document.createElement("div");n.className="todo-date";const e=document.createElement("p");e.className="todo-date__p",e.textContent="Today's To Do",n.appendChild(e);const r=document.createElement("span");return r.className="loading-icon",n.appendChild(r),n}static createTodoDivPlaceholder(){const n=document.createElement("div");n.className="todo-div__placeholder";const e=document.createElement("input");e.id="new-task",e.type="text",e.placeholder="Add to your list...",n.appendChild(e);const r=document.createElement("span");return r.className="arrow",n.appendChild(r),n}createTodoListDiv(){const n=document.createElement("div");n.className="todo-list";const e=document.createElement("ul");return e.className="todos-ul",this.tasks.sort(((n,e)=>n.index-e.index)).forEach((n=>{const r=new f(n);e.appendChild(r.create())})),n.appendChild(e),n}static createBtnDiv(){const n=document.createElement("div");n.className="btn";const e=document.createElement("button");return e.className="btn-p",e.textContent="Clear all completed",n.appendChild(e),n}}const B=C;const b=function(){const n=localStorage.getItem("tasks");return null!==n&&"undefined"!==n?JSON.parse(n):(localStorage.setItem("tasks",JSON.stringify([])),[])}();function x(){const n=document.getElementById("todo-list-placeholder"),e=(n=>new B(n).create())(b);n.appendChild(e);const r=document.getElementById("new-task");r.addEventListener("keyup",(n=>{if("Enter"===n.key){const n=r.value.trim();""!==n&&(((n,e)=>{const r={description:e,completed:!1,index:n.length+1};n.push(r);const t=document.querySelector(".todos-ul"),o=(new f(r),new f(r).create());t.appendChild(o)})(b,n),localStorage.setItem("tasks",JSON.stringify(b)),r.value="")}})),document.querySelector(".todos-ul").addEventListener("click",(n=>{if(n.target.classList.contains("delete-icon")){const e=n.target.parentElement;parseInt(e.dataset.index,10),e.taskElement.deleteTask(b,h)}}))}window.addEventListener("DOMContentLoaded",(()=>{x(),h()}))},913:(n,e,r)=>{n.exports=r.p+"f364e958eb482bf2a3f8.svg"},873:(n,e,r)=>{n.exports=r.p+"740d0687e67af6c4e50d.svg"},538:(n,e,r)=>{n.exports=r.p+"54fca204ed115d42f815.svg"}},n=>{n(n.s=33)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VXdELFNBQVMsZUFBZ0IsQ0FDbEQsTUFBTTdELEVBQVdxRCxFQUFNNUYsT0FBT3FHLGNBQ2hCQyxTQUFTL0QsRUFBU0wsUUFBUXpDLE1BQU8sSUFDL0M4QyxFQUFTTyxZQUFZYSxXQUFXN0IsRUFBT0QsRUFDekMsSUFFSixDQUVBekIsT0FBT29ELGlCQUFpQixvQkFBb0IsS0FDMUMrQixJQUNBMUQsR0FBbUIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly93ZWJwYWNrLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vd2VicGFjay10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly93ZWJwYWNrLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vd2VicGFjay10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vd2VicGFjay10ZW1wbGF0ZS8uL3NyYy9tb2R1bGVzL3VwZGF0ZUluZGV4ZXMuanMiLCJ3ZWJwYWNrOi8vd2VicGFjay10ZW1wbGF0ZS8uL3NyYy9tb2R1bGVzL3Rhc2tFbGVtZW50LmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9zcmMvbW9kdWxlcy9Ub0RvU3RydWN0dXJlLmpzIiwid2VicGFjazovL3dlYnBhY2stdGVtcGxhdGUvLi9zcmMvbW9kdWxlcy9sb2NhbFN0b3JhZ2VIZWxwZXIuanMiLCJ3ZWJwYWNrOi8vd2VicGFjay10ZW1wbGF0ZS8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJwYWNrLXRlbXBsYXRlLy4vc3JjL21vZHVsZXMvdG9kby5qcyIsIndlYnBhY2s6Ly93ZWJwYWNrLXRlbXBsYXRlLy4vc3JjL21vZHVsZXMvYWRkVGFzay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi4vYXNzZXRzL2ljb25zL3Jvd3Muc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi4vYXNzZXRzL2ljb25zL3Jvd3MyLnN2Z1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fID0gbmV3IFVSTChcIi4uL2Fzc2V0cy9pY29ucy9lbGlwc2lzLnN2Z1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKixcXHJcXG4qOjpiZWZvcmUsXFxyXFxuKjo6YWZ0ZXIge1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbmh0bWwsXFxyXFxuYm9keSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGZvbnQtc2l6ZTogNjIuNSU7XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbiN0b2RvLWxpc3RfX2RpdiB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDUwJTtcXHJcXG4gIGxlZnQ6IDUwJTtcXHJcXG4gIHdpZHRoOiA0MCU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuOSk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8tZGF0ZSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8tZGF0ZV9fcCB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBmb250LXNpemU6IDMuNXJlbTtcXHJcXG4gIHBhZGRpbmc6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi5sb2FkaW5nLWljb24ge1xcclxcbiAgd2lkdGg6IDE2cHg7XFxyXFxuICBoZWlnaHQ6IDE2cHg7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gIG1hcmdpbi1yaWdodDogMjJweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8tZGl2X19wbGFjZWhvbGRlciB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxufVxcclxcblxcclxcbiNuZXctdGFzayB7XFxyXFxuICB3aWR0aDogOTAlO1xcclxcbiAgcGFkZGluZzogMTBweDtcXHJcXG4gIG1hcmdpbjogMTBweCAxMHB4O1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgZm9udC1zaXplOiAycmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uYXJyb3cge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgcmlnaHQ6IDEwcHg7XFxyXFxuICB0b3A6IDUwJTtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXHJcXG4gIHdpZHRoOiAxNnB4O1xcclxcbiAgaGVpZ2h0OiAxNnB4O1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDIycHg7XFxyXFxufVxcclxcblxcclxcbi50b2Rvcy11bCB7XFxyXFxuICBsaXN0LXN0eWxlOiBub25lO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG9zLXVsIGxpIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMDtcXHJcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGdyYXk7XFxyXFxuICBwYWRkaW5nOiAyM3B4IDMwcHg7XFxyXFxufVxcclxcblxcclxcbmlucHV0W3R5cGU9J2NoZWNrYm94J10ge1xcclxcbiAgbWFyZ2luLXJpZ2h0OiAxOHB4O1xcclxcbn1cXHJcXG5cXHJcXG4udGhyZWUtZG90cy1pY29uIHtcXHJcXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xcclxcbiAgd2lkdGg6IDE2cHg7XFxyXFxuICBoZWlnaHQ6IDE2cHg7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fICsgXCIpO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gIGN1cnNvcjogbW92ZTtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG8tZGF0ZSxcXHJcXG4udG9kby1kaXZfX3BsYWNlaG9sZGVyLFxcclxcbi50b2RvLWxpc3QsXFxyXFxuLmJ0biB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGdyYXk7XFxyXFxuICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4udG9kby1saXN0IHtcXHJcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTtcXHJcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7XFxyXFxuICBtYXJnaW4tdG9wOiAtNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuLXAge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgcGFkZGluZzogMTBweDtcXHJcXG4gIG1hcmdpbjogMTBweCAwO1xcclxcbiAgZm9udC1zaXplOiAxLjZyZW07XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XFxyXFxufVxcclxcblxcclxcbi8qIEFkZCB0aGlzIGF0IHRoZSBlbmQgb2YgeW91ciBleGlzdGluZyBzdHlsZS5jc3MgZmlsZSAqL1xcclxcblxcclxcbiNtYWluLWNvbnRlbnQge1xcclxcbiAgZmxleDogMTtcXHJcXG59XFxyXFxuXFxyXFxuI2Zvb3RlciB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcXHJcXG4gIGJveC1zaGFkb3c6IDAgLTRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xcclxcbn1cXHJcXG5cXHJcXG4jZm9vdGVyIGRpdiB7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNmb290ZXIgcCB7XFxyXFxuICBmb250LXNpemU6IDEuNHJlbTtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxyXFxufVxcclxcblxcclxcbi5lcmFzZS1pY29uIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0ODAwJSk7XFxyXFxuICBmb250LXNpemU6IDEuMmVtO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOzs7RUFHRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxVQUFVO0VBQ1YseUJBQXlCO0VBQ3pCLFVBQVU7RUFDVix3Q0FBd0M7RUFDeEMsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsaUJBQWlCO0VBQ2pCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1oseURBQWlEO0VBQ2pELHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsUUFBUTtFQUNSLDJCQUEyQjtFQUMzQixXQUFXO0VBQ1gsWUFBWTtFQUNaLHlEQUFrRDtFQUNsRCxzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2Ysa0NBQWtDO0VBQ2xDLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixXQUFXO0VBQ1gsWUFBWTtFQUNaLHlEQUFvRDtFQUNwRCxzQkFBc0I7RUFDdEIsWUFBWTtBQUNkOztBQUVBOzs7O0VBSUUsdUJBQXVCO0VBQ3ZCLGtDQUFrQztFQUNsQyxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLFlBQVk7RUFDWiwyQkFBMkI7QUFDN0I7O0FBRUEsd0RBQXdEOztBQUV4RDtFQUNFLE9BQU87QUFDVDs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsNEJBQTRCO0VBQzVCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiosXFxyXFxuKjo6YmVmb3JlLFxcclxcbio6OmFmdGVyIHtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG5odG1sLFxcclxcbmJvZHkge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBmb250LXNpemU6IDYyLjUlO1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4jdG9kby1saXN0X19kaXYge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiA1MCU7XFxyXFxuICBsZWZ0OiA1MCU7XFxyXFxuICB3aWR0aDogNDAlO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjkpO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxyXFxufVxcclxcblxcclxcbi50b2RvLWRhdGUge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi50b2RvLWRhdGVfX3Age1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgZm9udC1zaXplOiAzLjVyZW07XFxyXFxuICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ubG9hZGluZy1pY29uIHtcXHJcXG4gIHdpZHRoOiAxNnB4O1xcclxcbiAgaGVpZ2h0OiAxNnB4O1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9hc3NldHMvaWNvbnMvcm93cy5zdmcnKTtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDIycHg7XFxyXFxufVxcclxcblxcclxcbi50b2RvLWRpdl9fcGxhY2Vob2xkZXIge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbn1cXHJcXG5cXHJcXG4jbmV3LXRhc2sge1xcclxcbiAgd2lkdGg6IDkwJTtcXHJcXG4gIHBhZGRpbmc6IDEwcHg7XFxyXFxuICBtYXJnaW46IDEwcHggMTBweDtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmFycm93IHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIHJpZ2h0OiAxMHB4O1xcclxcbiAgdG9wOiA1MCU7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxyXFxuICB3aWR0aDogMTZweDtcXHJcXG4gIGhlaWdodDogMTZweDtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2ljb25zL3Jvd3MyLnN2ZycpO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gIG1hcmdpbi1yaWdodDogMjJweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvZG9zLXVsIHtcXHJcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4udG9kb3MtdWwgbGkge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAwO1xcclxcbiAgZm9udC1zaXplOiAycmVtO1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcXHJcXG4gIHBhZGRpbmc6IDIzcHggMzBweDtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXRbdHlwZT0nY2hlY2tib3gnXSB7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDE4cHg7XFxyXFxufVxcclxcblxcclxcbi50aHJlZS1kb3RzLWljb24ge1xcclxcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxyXFxuICB3aWR0aDogMTZweDtcXHJcXG4gIGhlaWdodDogMTZweDtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2ljb25zL2VsaXBzaXMuc3ZnJyk7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcclxcbiAgY3Vyc29yOiBtb3ZlO1xcclxcbn1cXHJcXG5cXHJcXG4udG9kby1kYXRlLFxcclxcbi50b2RvLWRpdl9fcGxhY2Vob2xkZXIsXFxyXFxuLnRvZG8tbGlzdCxcXHJcXG4uYnRuIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcXHJcXG4gIHBhZGRpbmc6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi50b2RvLWxpc3Qge1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxufVxcclxcblxcclxcbi5idG4ge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5O1xcclxcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXHJcXG4gIG1hcmdpbi10b3A6IC02cHg7XFxyXFxufVxcclxcblxcclxcbi5idG4tcCB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBwYWRkaW5nOiAxMHB4O1xcclxcbiAgbWFyZ2luOiAxMHB4IDA7XFxyXFxuICBmb250LXNpemU6IDEuNnJlbTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcXHJcXG59XFxyXFxuXFxyXFxuLyogQWRkIHRoaXMgYXQgdGhlIGVuZCBvZiB5b3VyIGV4aXN0aW5nIHN0eWxlLmNzcyBmaWxlICovXFxyXFxuXFxyXFxuI21haW4tY29udGVudCB7XFxyXFxuICBmbGV4OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4jZm9vdGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIHBhZGRpbmc6IDFyZW07XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xcclxcbiAgYm94LXNoYWRvdzogMCAtNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxyXFxufVxcclxcblxcclxcbiNmb290ZXIgZGl2IHtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuI2Zvb3RlciBwIHtcXHJcXG4gIGZvbnQtc2l6ZTogMS40cmVtO1xcclxcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXHJcXG59XFxyXFxuXFxyXFxuLmVyYXNlLWljb24ge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQ4MDAlKTtcXHJcXG4gIGZvbnQtc2l6ZTogMS4yZW07XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVRhc2tJbmRleGVzKHRhc2tzKSB7XG4gIC8vIFVwZGF0ZSBpbmRleGVzIGZvciBhbGwgcmVtYWluaW5nIHRhc2tzXG4gIGNvbnN0IHRhc2tMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG9zLXVsJyk7XG4gIGNvbnN0IHJlbWFpbmluZ1Rhc2tzID0gdGFza0xpc3QucXVlcnlTZWxlY3RvckFsbCgnLnRhc2staXRlbScpO1xuICByZW1haW5pbmdUYXNrcy5mb3JFYWNoKCh0YXNrLCBpbmRleCkgPT4ge1xuICAgIHRhc2suZGF0YXNldC5pbmRleCA9IGluZGV4ICsgMTtcbiAgICBjb25zdCBjaGVja2JveCA9IHRhc2sucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcbiAgICBjaGVja2JveC5uYW1lID0gYHRhc2stJHtpbmRleCArIDF9YDtcbiAgICBjb25zdCBsYWJlbCA9IHRhc2sucXVlcnlTZWxlY3RvcignLnRhc2stdGV4dCcpO1xuICAgIGxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYHRhc2stJHtpbmRleCArIDF9YCk7XG4gIH0pO1xuXG4gIC8vIFVwZGF0ZSB0YXNrcyBpbiBsb2NhbCBzdG9yYWdlXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0YXNrcycsIEpTT04uc3RyaW5naWZ5KHRhc2tzKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVwZGF0ZVRhc2tJbmRleGVzOyIsImNsYXNzIFRhc2tFbGVtZW50IHtcbiAgY29uc3RydWN0b3IodGFzaykge1xuICAgIHRoaXMudGFzayA9IHRhc2s7XG4gICAgdGhpcy5saXN0SXRlbSA9IHRoaXMuY3JlYXRlKCk7XG4gICAgdGhpcy5lcmFzZUljb24gPSB0aGlzLmxpc3RJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5lcmFzZS1pY29uJyk7XG4gICAgdGhpcy50YXNrVGV4dCA9IHRoaXMubGlzdEl0ZW0ucXVlcnlTZWxlY3RvcignLnRhc2stdGV4dCcpO1xuICAgIHRoaXMudGhyZWVEb3RzSWNvbiA9IHRoaXMubGlzdEl0ZW0ucXVlcnlTZWxlY3RvcignLnRocmVlLWRvdHMtaWNvbicpO1xuICB9XG5cbiAgY3JlYXRlKCkge1xuICAgIGNvbnN0IGxpc3RJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICBsaXN0SXRlbS5kYXRhc2V0LmluZGV4ID0gdGhpcy50YXNrLmluZGV4O1xuICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5hZGQoJ3Rhc2staXRlbScpO1xuICAgIGxpc3RJdGVtLnRhc2tFbGVtZW50ID0gdGhpcztcblxuICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBjaGVja2JveC50eXBlID0gJ2NoZWNrYm94JztcbiAgICBjaGVja2JveC5jaGVja2VkID0gdGhpcy50YXNrLmNvbXBsZXRlZDtcbiAgICBsaXN0SXRlbS5hcHBlbmRDaGlsZChjaGVja2JveCk7XG5cbiAgICBjb25zdCB0YXNrVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICB0YXNrVGV4dC5jbGFzc0xpc3QuYWRkKCd0YXNrLXRleHQnKTtcbiAgICB0YXNrVGV4dC5pbm5lclRleHQgPSB0aGlzLnRhc2suZGVzY3JpcHRpb247XG4gICAgbGlzdEl0ZW0uYXBwZW5kQ2hpbGQodGFza1RleHQpO1xuXG4gICAgY29uc3QgZXJhc2VJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGVyYXNlSWNvbi5jbGFzc05hbWUgPSAnZXJhc2UtaWNvbic7XG4gICAgZXJhc2VJY29uLmlubmVySFRNTCA9ICcmdGltZXM7JztcbiAgICBlcmFzZUljb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBsaXN0SXRlbS5hcHBlbmRDaGlsZChlcmFzZUljb24pO1xuXG4gICAgY29uc3QgdGhyZWVEb3RzSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICB0aHJlZURvdHNJY29uLmNsYXNzTmFtZSA9ICd0aHJlZS1kb3RzLWljb24nO1xuICAgIGxpc3RJdGVtLmFwcGVuZENoaWxkKHRocmVlRG90c0ljb24pO1xuXG4gICAgbGlzdEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgKCkgPT4ge1xuICAgICAgZXJhc2VJY29uLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcbiAgICAgIHRocmVlRG90c0ljb24uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuICAgICAgbGlzdEl0ZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3llbGxvdyc7XG4gICAgICB0YXNrVGV4dC5jb250ZW50RWRpdGFibGUgPSAndHJ1ZSc7XG4gICAgfSk7XG5cbiAgICBsaXN0SXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsICgpID0+IHtcbiAgICAgIGVyYXNlSWNvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgbGlzdEl0ZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICAgICB0YXNrVGV4dC5jb250ZW50RWRpdGFibGUgPSAnZmFsc2UnO1xuICAgIH0pO1xuXG4gICAgZXJhc2VJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5kZWxldGVUYXNrKCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbGlzdEl0ZW07XG4gIH1cblxuICBkZWxldGVUYXNrKHRhc2tzLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGxpc3RJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGBsaVtkYXRhLWluZGV4PScke3RoaXMudGFzay5pbmRleH0nXWAsXG4gICAgKTtcbiAgICBpZiAobGlzdEl0ZW0gIT09IG51bGwpIHtcbiAgICAgIC8vIFJlbW92ZSB0aGUgbGlzdCBpdGVtIGVsZW1lbnQgZnJvbSB0aGUgRE9NXG4gICAgICBsaXN0SXRlbS5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgdGhlIHRhc2sgZnJvbSB0aGUgdGFza3MgYXJyYXlcbiAgICB0YXNrcy5zcGxpY2UodGhpcy50YXNrLmluZGV4IC0gMSwgMSk7XG5cbiAgICAvLyBVcGRhdGUgbG9jYWwgc3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0YXNrcycsIEpTT04uc3RyaW5naWZ5KHRhc2tzKSk7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH1cbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVGFza0VsZW1lbnQ7XG4iLCJpbXBvcnQgVGFza0VsZW1lbnQgZnJvbSAnLi90YXNrRWxlbWVudC5qcyc7XG5cbmNsYXNzIFRvRG9TdHJ1Y3R1cmUge1xuICBjb25zdHJ1Y3Rvcih0YXNrcykge1xuICAgIHRoaXMudGFza3MgPSB0YXNrcztcbiAgfVxuXG4gIGNyZWF0ZSgpIHtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWFpbicpO1xuICAgIG1haW4uaWQgPSAndG9kby1saXN0X19kaXYnO1xuXG4gICAgbWFpbi5hcHBlbmRDaGlsZChUb0RvU3RydWN0dXJlLmNyZWF0ZVRvZG9EYXRlRGl2KCkpO1xuICAgIG1haW4uYXBwZW5kQ2hpbGQoVG9Eb1N0cnVjdHVyZS5jcmVhdGVUb2RvRGl2UGxhY2Vob2xkZXIoKSk7XG4gICAgbWFpbi5hcHBlbmRDaGlsZCh0aGlzLmNyZWF0ZVRvZG9MaXN0RGl2KCkpO1xuICAgIG1haW4uYXBwZW5kQ2hpbGQoVG9Eb1N0cnVjdHVyZS5jcmVhdGVCdG5EaXYoKSk7XG5cbiAgICByZXR1cm4gbWFpbjtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGVUb2RvRGF0ZURpdigpIHtcbiAgICBjb25zdCB0b2RvRGF0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRvZG9EYXRlRGl2LmNsYXNzTmFtZSA9ICd0b2RvLWRhdGUnO1xuXG4gICAgY29uc3QgdG9kb0RhdGVQID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIHRvZG9EYXRlUC5jbGFzc05hbWUgPSAndG9kby1kYXRlX19wJztcbiAgICB0b2RvRGF0ZVAudGV4dENvbnRlbnQgPSBcIlRvZGF5J3MgVG8gRG9cIjtcbiAgICB0b2RvRGF0ZURpdi5hcHBlbmRDaGlsZCh0b2RvRGF0ZVApO1xuXG4gICAgY29uc3QgbG9hZGluZ0ljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgbG9hZGluZ0ljb24uY2xhc3NOYW1lID0gJ2xvYWRpbmctaWNvbic7XG4gICAgdG9kb0RhdGVEaXYuYXBwZW5kQ2hpbGQobG9hZGluZ0ljb24pO1xuXG4gICAgcmV0dXJuIHRvZG9EYXRlRGl2O1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZVRvZG9EaXZQbGFjZWhvbGRlcigpIHtcbiAgICBjb25zdCB0b2RvRGl2UGxhY2Vob2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0b2RvRGl2UGxhY2Vob2xkZXIuY2xhc3NOYW1lID0gJ3RvZG8tZGl2X19wbGFjZWhvbGRlcic7XG5cbiAgICBjb25zdCBuZXdUYXNrSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIG5ld1Rhc2tJbnB1dC5pZCA9ICduZXctdGFzayc7XG4gICAgbmV3VGFza0lucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgbmV3VGFza0lucHV0LnBsYWNlaG9sZGVyID0gJ0FkZCB0byB5b3VyIGxpc3QuLi4nO1xuICAgIHRvZG9EaXZQbGFjZWhvbGRlci5hcHBlbmRDaGlsZChuZXdUYXNrSW5wdXQpO1xuXG4gICAgY29uc3QgYXJyb3dJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGFycm93SWNvbi5jbGFzc05hbWUgPSAnYXJyb3cnO1xuICAgIHRvZG9EaXZQbGFjZWhvbGRlci5hcHBlbmRDaGlsZChhcnJvd0ljb24pO1xuXG4gICAgcmV0dXJuIHRvZG9EaXZQbGFjZWhvbGRlcjtcbiAgfVxuXG4gIGNyZWF0ZVRvZG9MaXN0RGl2KCkge1xuICAgIGNvbnN0IHRvZG9MaXN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdG9kb0xpc3REaXYuY2xhc3NOYW1lID0gJ3RvZG8tbGlzdCc7XG5cbiAgICBjb25zdCB0b2Rvc1VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICB0b2Rvc1VsLmNsYXNzTmFtZSA9ICd0b2Rvcy11bCc7XG4gICAgdGhpcy50YXNrc1xuICAgICAgLnNvcnQoKGEsIGIpID0+IGEuaW5kZXggLSBiLmluZGV4KVxuICAgICAgLmZvckVhY2goKHRhc2spID0+IHtcbiAgICAgICAgY29uc3QgdGFza0VsZW1lbnQgPSBuZXcgVGFza0VsZW1lbnQodGFzayk7XG4gICAgICAgIHRvZG9zVWwuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQuY3JlYXRlKCkpO1xuICAgICAgfSk7XG4gICAgdG9kb0xpc3REaXYuYXBwZW5kQ2hpbGQodG9kb3NVbCk7XG5cbiAgICByZXR1cm4gdG9kb0xpc3REaXY7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlQnRuRGl2KCkge1xuICAgIGNvbnN0IGJ0bkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGJ0bkRpdi5jbGFzc05hbWUgPSAnYnRuJztcblxuICAgIGNvbnN0IGJ0blAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBidG5QLmNsYXNzTmFtZSA9ICdidG4tcCc7XG4gICAgYnRuUC50ZXh0Q29udGVudCA9ICdDbGVhciBhbGwgY29tcGxldGVkJztcbiAgICBidG5EaXYuYXBwZW5kQ2hpbGQoYnRuUCk7XG5cbiAgICByZXR1cm4gYnRuRGl2O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRvRG9TdHJ1Y3R1cmU7XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0VGFza3NGcm9tTG9jYWxTdG9yYWdlKCkge1xuICBjb25zdCBzdG9yZWRUYXNrcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrcycpO1xuICBpZiAoc3RvcmVkVGFza3MgIT09IG51bGwgJiYgc3RvcmVkVGFza3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RvcmVkVGFza3MpO1xuICB9XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0YXNrcycsIEpTT04uc3RyaW5naWZ5KFtdKSk7XG4gIHJldHVybiBbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0VGFza3NGcm9tTG9jYWxTdG9yYWdlOyIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IHsgdXBkYXRlVGFza0luZGV4ZXMgfSBmcm9tICcuL21vZHVsZXMvdXBkYXRlSW5kZXhlcy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVUb0RvU3RydWN0dXJlIH0gZnJvbSAnLi9tb2R1bGVzL3RvZG8uanMnO1xuaW1wb3J0IGFkZFRhc2sgZnJvbSAnLi9tb2R1bGVzL2FkZFRhc2suanMnO1xuaW1wb3J0IHsgZ2V0VGFza3NGcm9tTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9tb2R1bGVzL2xvY2FsU3RvcmFnZUhlbHBlci5qcyc7XG5cbmNvbnN0IHRhc2tzID0gZ2V0VGFza3NGcm9tTG9jYWxTdG9yYWdlKCk7XG5cbmZ1bmN0aW9uIHBvcHVsYXRlVGFza3MoKSB7XG4gIGNvbnN0IHBsYWNlaG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZG8tbGlzdC1wbGFjZWhvbGRlcicpO1xuICBjb25zdCB0b0RvU3RydWN0dXJlID0gY3JlYXRlVG9Eb1N0cnVjdHVyZSh0YXNrcywgdGFza3MpO1xuICBwbGFjZWhvbGRlci5hcHBlbmRDaGlsZCh0b0RvU3RydWN0dXJlKTtcblxuICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXctdGFzaycpO1xuICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSBpbnB1dC52YWx1ZS50cmltKCk7XG4gICAgICBpZiAoaW5wdXRWYWx1ZSAhPT0gJycpIHtcbiAgICAgICAgYWRkVGFzayh0YXNrcywgaW5wdXRWYWx1ZSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0YXNrcycsIEpTT04uc3RyaW5naWZ5KHRhc2tzKSk7XG4gICAgICAgIGlucHV0LnZhbHVlID0gJyc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgY29uc3QgdG9kb0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb3MtdWwnKTtcblxuICB0b2RvTGlzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkZWxldGUtaWNvbicpKSB7XG4gICAgICBjb25zdCBsaXN0SXRlbSA9IGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICAgICAgY29uc3QgaW5kZXggPSBwYXJzZUludChsaXN0SXRlbS5kYXRhc2V0LmluZGV4LCAxMCk7XG4gICAgICBsaXN0SXRlbS50YXNrRWxlbWVudC5kZWxldGVUYXNrKHRhc2tzLCB1cGRhdGVUYXNrSW5kZXhlcyk7XG4gICAgfVxuICB9KTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gIHBvcHVsYXRlVGFza3MoKTtcbiAgdXBkYXRlVGFza0luZGV4ZXMoKTtcbn0pO1xuIiwiaW1wb3J0IFRhc2tFbGVtZW50IGZyb20gJy4vdGFza0VsZW1lbnQuanMnO1xuaW1wb3J0IFRvRG9TdHJ1Y3R1cmUgZnJvbSAnLi9Ub0RvU3RydWN0dXJlLmpzJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVRhc2tFbGVtZW50ID0gKHRhc2spID0+IHtcbiAgY29uc3QgdGFza0VsZW1lbnQgPSBuZXcgVGFza0VsZW1lbnQodGFzayk7XG4gIHJldHVybiB0YXNrRWxlbWVudC5jcmVhdGUoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVUb0RvU3RydWN0dXJlID0gKHRhc2tzKSA9PiB7XG4gIGNvbnN0IHRvRG9TdHJ1Y3R1cmUgPSBuZXcgVG9Eb1N0cnVjdHVyZSh0YXNrcyk7XG4gIHJldHVybiB0b0RvU3RydWN0dXJlLmNyZWF0ZSgpO1xufTtcbiIsImltcG9ydCB7IGNyZWF0ZVRhc2tFbGVtZW50IH0gZnJvbSAnLi90b2RvLmpzJztcbmltcG9ydCBUYXNrRWxlbWVudCBmcm9tICcuL3Rhc2tFbGVtZW50LmpzJztcblxuY29uc3QgYWRkVGFzayA9ICh0YXNrcywgZGVzY3JpcHRpb24pID0+IHtcbiAgY29uc3QgbmV3VGFzayA9IHtcbiAgICBkZXNjcmlwdGlvbixcbiAgICBjb21wbGV0ZWQ6IGZhbHNlLFxuICAgIGluZGV4OiB0YXNrcy5sZW5ndGggKyAxLCAvLyBTZXQgaW5kZXggdG8gdGFza3MubGVuZ3RoICsgMVxuICB9O1xuICB0YXNrcy5wdXNoKG5ld1Rhc2spO1xuICBjb25zdCB0YXNrTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2Rvcy11bCcpO1xuICBjb25zdCB0YXNrRWxlbWVudCA9IG5ldyBUYXNrRWxlbWVudChuZXdUYXNrKTtcbiAgY29uc3QgbmV3VGFza0VsZW1lbnQgPSBjcmVhdGVUYXNrRWxlbWVudChuZXdUYXNrLCB0YXNrRWxlbWVudCk7XG4gIHRhc2tMaXN0LmFwcGVuZENoaWxkKG5ld1Rhc2tFbGVtZW50KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFkZFRhc2s7XG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwidXBkYXRlVGFza0luZGV4ZXMiLCJ0YXNrcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidGFzayIsImRhdGFzZXQiLCJuYW1lIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImNvbnN0cnVjdG9yIiwibGlzdEl0ZW0iLCJjcmVhdGUiLCJlcmFzZUljb24iLCJ0YXNrVGV4dCIsInRocmVlRG90c0ljb24iLCJjbGFzc0xpc3QiLCJhZGQiLCJ0YXNrRWxlbWVudCIsImNoZWNrYm94IiwidHlwZSIsImNoZWNrZWQiLCJjb21wbGV0ZWQiLCJpbm5lclRleHQiLCJkZXNjcmlwdGlvbiIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsImRpc3BsYXkiLCJhZGRFdmVudExpc3RlbmVyIiwiYmFja2dyb3VuZENvbG9yIiwiY29udGVudEVkaXRhYmxlIiwiZGVsZXRlVGFzayIsImNhbGxiYWNrIiwiVG9Eb1N0cnVjdHVyZSIsIm1haW4iLCJjcmVhdGVUb2RvRGF0ZURpdiIsImNyZWF0ZVRvZG9EaXZQbGFjZWhvbGRlciIsImNyZWF0ZVRvZG9MaXN0RGl2IiwiY3JlYXRlQnRuRGl2Iiwic3RhdGljIiwidG9kb0RhdGVEaXYiLCJ0b2RvRGF0ZVAiLCJ0ZXh0Q29udGVudCIsImxvYWRpbmdJY29uIiwidG9kb0RpdlBsYWNlaG9sZGVyIiwibmV3VGFza0lucHV0IiwicGxhY2Vob2xkZXIiLCJhcnJvd0ljb24iLCJ0b2RvTGlzdERpdiIsInRvZG9zVWwiLCJzb3J0IiwiYSIsImIiLCJidG5EaXYiLCJidG5QIiwic3RvcmVkVGFza3MiLCJnZXRJdGVtIiwicGFyc2UiLCJnZXRUYXNrc0Zyb21Mb2NhbFN0b3JhZ2UiLCJwb3B1bGF0ZVRhc2tzIiwiZ2V0RWxlbWVudEJ5SWQiLCJ0b0RvU3RydWN0dXJlIiwiY3JlYXRlVG9Eb1N0cnVjdHVyZSIsImlucHV0IiwiZXZlbnQiLCJrZXkiLCJpbnB1dFZhbHVlIiwidmFsdWUiLCJ0cmltIiwibmV3VGFzayIsInRhc2tMaXN0IiwibmV3VGFza0VsZW1lbnQiLCJjb250YWlucyIsInBhcmVudEVsZW1lbnQiLCJwYXJzZUludCJdLCJzb3VyY2VSb290IjoiIn0=