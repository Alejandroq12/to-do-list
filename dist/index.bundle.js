"use strict";(self.webpackChunkwebpack_template=self.webpackChunkwebpack_template||[]).push([[826],{426:(n,r,e)=>{e.d(r,{Z:()=>C});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),A=e(667),d=e.n(A),s=new URL(e(873),e.b),c=new URL(e(538),e.b),p=new URL(e(913),e.b),l=i()(o()),u=d()(s),m=d()(c),g=d()(p);l.push([n.id,"*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+u+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+m+");\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n.three-dots-icon {\r\n  margin-left: auto;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url("+g+");\r\n  background-size: cover;\r\n}\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;EAGE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,UAAU;EACV,yBAAyB;EACzB,UAAU;EACV,wCAAwC;EACxC,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,yDAAiD;EACjD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,iBAAiB;EACjB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,QAAQ;EACR,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,yDAAkD;EAClD,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;EACf,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,yDAAoD;EACpD,sBAAsB;AACxB;;AAEA;;;;EAIE,uBAAuB;EACvB,kCAAkC;EAClC,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,aAAa;EACb,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,YAAY;EACZ,2BAA2B;AAC7B",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 62.5%;\r\n  height: 100%;\r\n}\r\n\r\n#todo-list__div {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  background-color: #f4f4f4;\r\n  padding: 0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.todo-date {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.todo-date__p {\r\n  margin: 0;\r\n  font-size: 3.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todo-div__placeholder {\r\n  position: relative;\r\n}\r\n\r\n#new-task {\r\n  width: 90%;\r\n  padding: 10px;\r\n  margin: 10px 10px;\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.arrow {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/rows2.svg');\r\n  background-size: cover;\r\n  margin-right: 22px;\r\n}\r\n\r\n.todos-ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.todos-ul li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 2rem;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 23px 30px;\r\n}\r\n\r\ninput[type='checkbox'] {\r\n  margin-right: 18px;\r\n}\r\n\r\n.three-dots-icon {\r\n  margin-left: auto;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url('../assets/icons/elipsis.svg');\r\n  background-size: cover;\r\n}\r\n\r\n.todo-date,\r\n.todo-div__placeholder,\r\n.todo-list,\r\n.btn {\r\n  background-color: white;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 10px;\r\n}\r\n\r\n.todo-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.btn {\r\n  background-color: lightgrey;\r\n  border-bottom: none;\r\n  margin-top: -6px;\r\n}\r\n\r\n.btn-p {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: lightgray;\r\n}\r\n"],sourceRoot:""}]);const C=l},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);t&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),r.push(c))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var d=n[A],s=t.base?d[0]+t.base:d[0],c=a[s]||0,p="".concat(s," ").concat(c);a[s]=c+1;var l=e(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var m=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var d=t(n,o),s=0;s<a.length;s++){var c=e(a[s]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}a=d}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},201:(n,r,e)=>{var t=e(379),o=e.n(t),a=e(795),i=e.n(a),A=e(569),d=e.n(A),s=e(565),c=e.n(s),p=e(216),l=e.n(p),u=e(589),m=e.n(u),g=e(426),C={};C.styleTagTransform=m(),C.setAttributes=c(),C.insert=d().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=l(),o()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const E=[{description:"Buy groceries",completed:!1,index:1},{description:"Do laundry",completed:!0,index:0},{description:"Finish project",completed:!1,index:2}];window.addEventListener("DOMContentLoaded",(function(){const n=document.getElementById("todo-list-placeholder"),r=function(n){const r=document.createElement("main");r.id="todo-list__div";const e=document.createElement("div");e.className="todo-date";const t=document.createElement("p");t.className="todo-date__p",t.textContent="Today's To Do",e.appendChild(t);const o=document.createElement("span");o.className="loading-icon",e.appendChild(o);const a=document.createElement("div");a.className="todo-div__placeholder";const i=document.createElement("input");i.id="new-task",i.type="text",i.placeholder="Add to your list...",a.appendChild(i);const A=document.createElement("span");A.className="arrow",a.appendChild(A);const d=document.createElement("div");d.className="todo-list";const s=document.createElement("ul");s.className="todos-ul",n.sort(((n,r)=>n.index-r.index)).forEach((n=>{s.appendChild(function(n){const r=document.createElement("li"),e=document.createElement("input");e.type="checkbox",e.checked=n.completed,r.appendChild(e);const t=document.createTextNode(`${n.description} (${n.completed?"completed":"incomplete"})`);r.appendChild(t);const o=document.createElement("span");return o.className="three-dots-icon",r.appendChild(o),r.dataset.index=n.index,r.classList.add("task-item"),r}(n))})),d.appendChild(s);const c=document.createElement("div");c.className="btn";const p=document.createElement("button");return p.className="btn-p",p.textContent="Clear all completed",c.appendChild(p),r.appendChild(e),r.appendChild(a),r.appendChild(d),r.appendChild(c),r}(E);n.appendChild(r)}))},913:(n,r,e)=>{n.exports=e.p+"f364e958eb482bf2a3f8.svg"},873:(n,r,e)=>{n.exports=e.p+"740d0687e67af6c4e50d.svg"},538:(n,r,e)=>{n.exports=e.p+"54fca204ed115d42f815.svg"}},n=>{n(n.s=201)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,